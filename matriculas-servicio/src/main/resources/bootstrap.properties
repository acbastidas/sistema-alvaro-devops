# Configuracion de Bootstrap - Se carga ANTES que application.properties
# Usado para configurar el cliente de Config Server y encontrar el Servidor Eureka

# === Nombre de la Aplicacion (Config Server lo usa para encontrar su configuracion) ===
# Este nombre debe coincidir con el archivo .properties en tu repo de GitHub (ej: usuarios-servicio.properties)
spring.application.name=usuarios-servicio, asignaturas-servicio, matriculas-servicio, gateway-servicio

# === Configuracion para Descubrir el Config Server via Eureka ===
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.service-id=config-server 

# === Configuracion Minimal de Eureka Client en Bootstrap ===
# Necesario para que el cliente pueda encontrar a Eureka *antes* de obtener
# su configuracion principal del Config Server.
# Usamos localhost aqui porque al iniciar localmente, necesita encontrar a Eureka localmente.
# La configuracion de application.properties (obtenida del Config Server)
# sobrescribira esto despues para usar 'eureka-server:8761' cuando corra en Docker.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Opcional: Si quieres activar un perfil (ej: local) DENTRO del proceso de bootstrapping
# spring.profiles.active=local