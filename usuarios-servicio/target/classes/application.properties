spring.application.name=usuarios-servicio

# Puerto del servidor web
server.port=8081

# Configuración MongoDB
# Usaremos el nombre del servicio definido en docker-compose como hostname ('mongo-usuarios')
# y una base de datos específica ('usuarios_db')
# spring.data.mongodb.uri=mongodb://mongo-usuarios:27017/usuarios_db
spring.data.mongodb.uri=mongodb://localhost:27017/usuarios_db

# Configuración Actuator (para monitoreo)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# === Configuración como cliente Eureka ===
# URL donde encontrar el servidor Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/ # Apunta a la URL del servidor Eureka

# Habilita el descubrimiento (esto suele ser true por defecto si la dependencia está presente)
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Configuración de instancia (cómo se identifica este servicio en Eureka)
# Usa el nombre de la aplicación y un valor aleatorio para distinguir instancias si corren varias en el mismo host/puerto
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.instance.hostname=${spring.application.name} # Opcional, a veces ayuda en ciertos entornos


# Asegura que el Health Check de Actuator esté disponible para que Eureka sepa si el servicio está saludable
management.health.eureka.enabled=true